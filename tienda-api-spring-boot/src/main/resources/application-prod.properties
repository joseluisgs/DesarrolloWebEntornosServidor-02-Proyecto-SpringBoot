# PERFIL DE PRODUCCION
## BASE DE DATOS
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DATABASE:tienda}
# Usuario y contraseña de la base de datos
spring.datasource.username=${DATABASE_USER:admin}
spring.datasource.password=${DATABASE_PASSWORD:adminPassword123}
# Habilitamos los mensajes sql en el log para ver las consultas, quitar en producción
# spring.jpa.show-sql=true
spring.jpa.open-in-view=false
# Habilitamos que cargue los datos de prueba en la base de datos
# estos datos los carga del fichero data.sql del directorio resources, quitar en producción
spring.jpa.defer-datasource-initialization=false
# Habilitamos la creación de la base de datos en cada arranque, quitar en producción
spring.jpa.hibernate.ddl-auto=update
# Habilitamos la carga de datos de prueba en cada arranque, quitar en producción
spring.sql.init.mode=never
# Habilitamos el dialecto
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
## MONGO DB
# Configuración de la base de datos MongoDB en base a variables de entorno
spring.data.mongodb.host=${MONGO_HOST:localhost}
spring.data.mongodb.port=${MONGO_PORT:27017}
spring.data.mongodb.database=${MONGO_DB:tienda}
spring.data.mongodb.username=${DATABASE_USER:admin}
spring.data.mongodb.password=${DATABASE_PASSWORD:adminPassword123}
## REDIS CACHE
# Configuración de Redis para producción
# Configuración de caché en producción para, es por defecto y no haría falta ponerlo en una
# clase de configuración, pero lo ponemos aquí para que se vea claramente la diferencia con producción
spring.cache.type=redis
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.database=${REDIS_DATABASE:0}
spring.data.redis.timeout=${REDIS_TIMEOUT:3000ms}
# Pool de conexiones Redis
spring.data.redis.lettuce.pool.max-active=${REDIS_POOL_MAX_ACTIVE:20}
spring.data.redis.lettuce.pool.max-idle=${REDIS_POOL_MAX_IDLE:10}
spring.data.redis.lettuce.pool.min-idle=${REDIS_POOL_MIN_IDLE:5}
spring.data.redis.lettuce.pool.max-wait=2000ms
# Cachés predefinidos
# spring.cache.cache-names=usuarios,productos,pedidos
# Logging de caché para producción (menos verbose)
logging.level.org.springframework.cache=WARN
## SWAGGER
# Habilitamos swagger, quitar en producción
springdoc.swagger-ui.enabled=false
## ALMACENAMIENTO DE FICHEROS
upload.delete=false