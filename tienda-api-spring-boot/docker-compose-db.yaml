services:
  # PostgreSQL
  postgres-db:
    container_name: tienda-db_postgres
    image: postgres:12-alpine
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tienda-network

  # MongoDB
  mongo-db:
    container_name: tienda-db_mongo
    image: mongo:5.0
    restart: always
    env_file: .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DATABASE_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - ${MONGO_PORT}:27017
    volumes:
      - ./database/tienda.js:/docker-entrypoint-initdb.d/tienda.js:ro
    networks:
      - tienda-network

  # Redis
  redis-db:
    container_name: tienda-db_redis
    image: redis:7-alpine
    restart: always
    env_file: .env
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - tienda-network

  # Adminer para conectarse a la base de datos
  # Quitar en despliegue final
  adminer-postgres-db:
    container_name: tienda-db_adminer-postgres-db
    image: adminer
    restart: always
    env_file: .env
    ports:
      - 8080:8080
    depends_on:
      - postgres-db
    networks:
      - tienda-network

  # Mongo Express para conectarse a la base de datos
  # Quitar en despliegue final
  mongo-express-db:
    container_name: tienda-db_mongo-express-db
    image: mongo-express
    restart: always
    env_file: .env
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DATABASE_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DATABASE_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo-db
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_SITE_BASEURL: /
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongo-db
    networks:
      - tienda-network

  # Redis Commander para gestionar Redis (opcional)
  # Quitar en despliegue final
  redis-commander:
    container_name: tienda-db_redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    env_file: .env
    ports:
      - 8082:8081
    environment:
      REDIS_HOSTS: local:redis-db:${REDIS_PORT}:${REDIS_DATABASE}:${REDIS_PASSWORD}
    depends_on:
      - redis-db
    networks:
      - tienda-network

networks:
  tienda-network:
    driver: bridge